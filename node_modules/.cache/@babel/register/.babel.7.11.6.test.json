{
  "{\"sourceRoot\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\",\"filename\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\\\\routes\\\\api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver",
      "filename": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\api.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar SudokuSolver = require('../controllers/sudoku-solver.js');\n\nvar sudokuObject = new SudokuSolver();\n\nmodule.exports = function (app) {\n  app.route('/api/check').post(function (req, res) {\n    if (req.body.puzzle && req.body.coordinate && req.body.value) {\n      var puzzleString = req.body.puzzle;\n      var value = req.body.value;\n      var coordinate = req.body.coordinate;\n      var coordinateRegExp = /^[A-I]\\d$/;\n      var valueRegExp = /^[1-9]$/;\n      var puzzleRegExp = /^[1-9\\.]{81}$/;\n\n      if (!value.match(valueRegExp)) {\n        res.json({\n          \"error\": \"Invalid value\"\n        });\n      } else if (!coordinate.match(coordinateRegExp)) {\n        res.json({\n          \"error\": \"Invalid coordinate\"\n        });\n      } else if (!puzzle.match(puzzleRegExp)) {\n        res.json({\n          \"error\": \"Invalid characters in puzzle\"\n        });\n      } else if (puzzle.length != 81) {\n        res.json({\n          \"error\": \"Expected puzzle to be 81 characters long\"\n        });\n      } // Continue with what is required in this endpoint.\n\n    } else {\n      res.json({\n        \"error\": \"Required field(s) missing\"\n      });\n    }\n  });\n  app.route('/api/solve').post(function (req, res) {\n    if (!req.body.puzzle) {\n      res.json({\n        \"error\": \"Required field missing\"\n      });\n    } else {\n      console.log('Solving...');\n      var solveString = req.body.puzzle;\n      var regEx = /^[123456789\\.]{81}/;\n\n      if (solveString.match(regEx)) {\n        var inputLength = sudokuObject.validate(solveString);\n\n        if (!inputLength) {\n          res.json({\n            \"error\": \"Expected puzzle to be 81 characters long\"\n          });\n        } else {\n          // Replace . with 0\n          var sudokuBoard = sudokuObject.createBoard(solveString);\n          var sudokuSolution = sudokuObject.solve(sudokuBoard);\n          res.json({\n            \"solution\": sudokuSolution\n          });\n        }\n      } else {\n        res.json({\n          \"error\": \"Invalid characters in puzzle\"\n        });\n      }\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJTdWRva3VTb2x2ZXIiLCJyZXF1aXJlIiwic3Vkb2t1T2JqZWN0IiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInJvdXRlIiwicG9zdCIsInJlcSIsInJlcyIsImJvZHkiLCJwdXp6bGUiLCJjb29yZGluYXRlIiwidmFsdWUiLCJwdXp6bGVTdHJpbmciLCJjb29yZGluYXRlUmVnRXhwIiwidmFsdWVSZWdFeHAiLCJwdXp6bGVSZWdFeHAiLCJtYXRjaCIsImpzb24iLCJsZW5ndGgiLCJjb25zb2xlIiwibG9nIiwic29sdmVTdHJpbmciLCJyZWdFeCIsImlucHV0TGVuZ3RoIiwidmFsaWRhdGUiLCJzdWRva3VCb2FyZCIsImNyZWF0ZUJvYXJkIiwic3Vkb2t1U29sdXRpb24iLCJzb2x2ZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsWUFBWSxHQUFHQyxPQUFPLENBQUMsaUNBQUQsQ0FBNUI7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHLElBQUlGLFlBQUosRUFBckI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQixVQUFVQyxHQUFWLEVBQWU7QUFFL0JBLEVBQUFBLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLFlBQVYsRUFDR0MsSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xCLFFBQUlELEdBQUcsQ0FBQ0UsSUFBSixDQUFTQyxNQUFULElBQW1CSCxHQUFHLENBQUNFLElBQUosQ0FBU0UsVUFBNUIsSUFBMENKLEdBQUcsQ0FBQ0UsSUFBSixDQUFTRyxLQUF2RCxFQUE4RDtBQUM1RCxVQUFNQyxZQUFZLEdBQUdOLEdBQUcsQ0FBQ0UsSUFBSixDQUFTQyxNQUE5QjtBQUNBLFVBQU1FLEtBQUssR0FBR0wsR0FBRyxDQUFDRSxJQUFKLENBQVNHLEtBQXZCO0FBQ0EsVUFBTUQsVUFBVSxHQUFHSixHQUFHLENBQUNFLElBQUosQ0FBU0UsVUFBNUI7QUFFQSxVQUFNRyxnQkFBZ0IsR0FBRyxXQUF6QjtBQUNBLFVBQU1DLFdBQVcsR0FBRyxTQUFwQjtBQUNBLFVBQU1DLFlBQVksR0FBRyxlQUFyQjs7QUFFQSxVQUFLLENBQUNKLEtBQUssQ0FBQ0ssS0FBTixDQUFZRixXQUFaLENBQU4sRUFBaUM7QUFDL0JQLFFBQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQ1AsbUJBQVE7QUFERCxTQUFUO0FBR0QsT0FKRCxNQUlPLElBQUksQ0FBQ1AsVUFBVSxDQUFDTSxLQUFYLENBQWlCSCxnQkFBakIsQ0FBTCxFQUF5QztBQUM5Q04sUUFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFDUCxtQkFBUTtBQURELFNBQVQ7QUFHRCxPQUpNLE1BSUEsSUFBSSxDQUFDUixNQUFNLENBQUNPLEtBQVAsQ0FBYUQsWUFBYixDQUFMLEVBQWlDO0FBQ3RDUixRQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBUztBQUNQLG1CQUFTO0FBREYsU0FBVDtBQUdELE9BSk0sTUFJQSxJQUFJUixNQUFNLENBQUNTLE1BQVAsSUFBaUIsRUFBckIsRUFBd0I7QUFDN0JYLFFBQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQ1AsbUJBQVE7QUFERCxTQUFUO0FBR0QsT0F6QjJELENBMkI1RDs7QUFFRCxLQTdCRCxNQTZCTztBQUNMVixNQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBUztBQUNQLGlCQUFRO0FBREQsT0FBVDtBQUdEO0FBRUYsR0FyQ0g7QUF1Q0FkLEVBQUFBLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLFlBQVYsRUFDR0MsSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xCLFFBQUksQ0FBQ0QsR0FBRyxDQUFDRSxJQUFKLENBQVNDLE1BQWQsRUFBc0I7QUFDcEJGLE1BQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQ1AsaUJBQVE7QUFERCxPQUFUO0FBR0QsS0FKRCxNQUlPO0FBQ0xFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQSxVQUFNQyxXQUFXLEdBQUdmLEdBQUcsQ0FBQ0UsSUFBSixDQUFTQyxNQUE3QjtBQUNBLFVBQU1hLEtBQUssR0FBRyxvQkFBZDs7QUFDQSxVQUFJRCxXQUFXLENBQUNMLEtBQVosQ0FBa0JNLEtBQWxCLENBQUosRUFBNkI7QUFDM0IsWUFBTUMsV0FBVyxHQUFHdkIsWUFBWSxDQUFDd0IsUUFBYixDQUFzQkgsV0FBdEIsQ0FBcEI7O0FBQ0EsWUFBSSxDQUFDRSxXQUFMLEVBQWtCO0FBQ2hCaEIsVUFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFDUCxxQkFBUztBQURGLFdBQVQ7QUFHRCxTQUpELE1BSU87QUFDSDtBQUNBLGNBQUlRLFdBQVcsR0FBR3pCLFlBQVksQ0FBQzBCLFdBQWIsQ0FBeUJMLFdBQXpCLENBQWxCO0FBQ0EsY0FBTU0sY0FBYyxHQUFHM0IsWUFBWSxDQUFDNEIsS0FBYixDQUFtQkgsV0FBbkIsQ0FBdkI7QUFDQWxCLFVBQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQ1Asd0JBQVlVO0FBREwsV0FBVDtBQUdIO0FBQ0YsT0FkRCxNQWNPO0FBQ0xwQixRQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBUztBQUNQLG1CQUFTO0FBREYsU0FBVDtBQUdEO0FBQ0Y7QUFFRixHQS9CSDtBQWdDRCxDQXpFRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXDI3NjgyXFxEZXNrdG9wXFxMb2NhbF9Qcm9qZWN0c1xcUXVhbGl0eV9Bc3N1cmFuY2VfYW5kX1Rlc3Rpbmdfd2l0aF9DaGFpXFxQcm9qZWN0c1xcYm9pbGVycGxhdGUtcHJvamVjdC1zdWRva3Utc29sdmVyXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgU3Vkb2t1U29sdmVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvc3Vkb2t1LXNvbHZlci5qcycpO1xuY29uc3Qgc3Vkb2t1T2JqZWN0ID0gbmV3IFN1ZG9rdVNvbHZlcigpO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICBmdW5jdGlvbiAoYXBwKSB7XG5cbiAgYXBwLnJvdXRlKCcvYXBpL2NoZWNrJylcbiAgICAucG9zdCgocmVxLCByZXMpID0+IHtcbiAgICAgIGlmIChyZXEuYm9keS5wdXp6bGUgJiYgcmVxLmJvZHkuY29vcmRpbmF0ZSAmJiByZXEuYm9keS52YWx1ZSkge1xuICAgICAgICBjb25zdCBwdXp6bGVTdHJpbmcgPSByZXEuYm9keS5wdXp6bGU7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gcmVxLmJvZHkudmFsdWU7XG4gICAgICAgIGNvbnN0IGNvb3JkaW5hdGUgPSByZXEuYm9keS5jb29yZGluYXRlO1xuXG4gICAgICAgIGNvbnN0IGNvb3JkaW5hdGVSZWdFeHAgPSAvXltBLUldXFxkJC87XG4gICAgICAgIGNvbnN0IHZhbHVlUmVnRXhwID0gL15bMS05XSQvO1xuICAgICAgICBjb25zdCBwdXp6bGVSZWdFeHAgPSAvXlsxLTlcXC5dezgxfSQvO1xuXG4gICAgICAgIGlmICggIXZhbHVlLm1hdGNoKHZhbHVlUmVnRXhwKSApIHtcbiAgICAgICAgICByZXMuanNvbih7XG4gICAgICAgICAgICBcImVycm9yXCI6XCJJbnZhbGlkIHZhbHVlXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIGlmICghY29vcmRpbmF0ZS5tYXRjaChjb29yZGluYXRlUmVnRXhwKSkge1xuICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgIFwiZXJyb3JcIjpcIkludmFsaWQgY29vcmRpbmF0ZVwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAoIXB1enpsZS5tYXRjaChwdXp6bGVSZWdFeHApKSB7XG4gICAgICAgICAgcmVzLmpzb24oe1xuICAgICAgICAgICAgXCJlcnJvclwiOiBcIkludmFsaWQgY2hhcmFjdGVycyBpbiBwdXp6bGVcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHB1enpsZS5sZW5ndGggIT0gODEpe1xuICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgIFwiZXJyb3JcIjpcIkV4cGVjdGVkIHB1enpsZSB0byBiZSA4MSBjaGFyYWN0ZXJzIGxvbmdcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ29udGludWUgd2l0aCB3aGF0IGlzIHJlcXVpcmVkIGluIHRoaXMgZW5kcG9pbnQuXG5cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICBcImVycm9yXCI6XCJSZXF1aXJlZCBmaWVsZChzKSBtaXNzaW5nXCJcbiAgICAgICAgfSlcbiAgICAgIH1cblxuICAgIH0pO1xuICAgIFxuICBhcHAucm91dGUoJy9hcGkvc29sdmUnKVxuICAgIC5wb3N0KChyZXEsIHJlcykgPT4ge1xuICAgICAgaWYgKCFyZXEuYm9keS5wdXp6bGUpIHtcbiAgICAgICAgcmVzLmpzb24oe1xuICAgICAgICAgIFwiZXJyb3JcIjpcIlJlcXVpcmVkIGZpZWxkIG1pc3NpbmdcIlxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTb2x2aW5nLi4uJyk7XG4gICAgICAgIGNvbnN0IHNvbHZlU3RyaW5nID0gcmVxLmJvZHkucHV6emxlO1xuICAgICAgICBjb25zdCByZWdFeCA9IC9eWzEyMzQ1Njc4OVxcLl17ODF9LztcbiAgICAgICAgaWYgKHNvbHZlU3RyaW5nLm1hdGNoKHJlZ0V4KSl7XG4gICAgICAgICAgY29uc3QgaW5wdXRMZW5ndGggPSBzdWRva3VPYmplY3QudmFsaWRhdGUoc29sdmVTdHJpbmcpO1xuICAgICAgICAgIGlmICghaW5wdXRMZW5ndGgpIHtcbiAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgXCJlcnJvclwiOiBcIkV4cGVjdGVkIHB1enpsZSB0byBiZSA4MSBjaGFyYWN0ZXJzIGxvbmdcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy8gUmVwbGFjZSAuIHdpdGggMFxuICAgICAgICAgICAgICBsZXQgc3Vkb2t1Qm9hcmQgPSBzdWRva3VPYmplY3QuY3JlYXRlQm9hcmQoc29sdmVTdHJpbmcpO1xuICAgICAgICAgICAgICBjb25zdCBzdWRva3VTb2x1dGlvbiA9IHN1ZG9rdU9iamVjdC5zb2x2ZShzdWRva3VCb2FyZCk7XG4gICAgICAgICAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBcInNvbHV0aW9uXCI6IHN1ZG9rdVNvbHV0aW9uXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXMuanNvbih7XG4gICAgICAgICAgICBcImVycm9yXCI6IFwiSW52YWxpZCBjaGFyYWN0ZXJzIGluIHB1enpsZVwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgIH0pO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "SudokuSolver",
        "require",
        "sudokuObject",
        "module",
        "exports",
        "app",
        "route",
        "post",
        "req",
        "res",
        "body",
        "puzzle",
        "coordinate",
        "value",
        "puzzleString",
        "coordinateRegExp",
        "valueRegExp",
        "puzzleRegExp",
        "match",
        "json",
        "length",
        "console",
        "log",
        "solveString",
        "regEx",
        "inputLength",
        "validate",
        "sudokuBoard",
        "createBoard",
        "sudokuSolution",
        "solve"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,iCAAD,CAA5B;;AACA,IAAMC,YAAY,GAAG,IAAIF,YAAJ,EAArB;;AAEAG,MAAM,CAACC,OAAP,GAAkB,UAAUC,GAAV,EAAe;AAE/BA,EAAAA,GAAG,CAACC,KAAJ,CAAU,YAAV,EACGC,IADH,CACQ,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClB,QAAID,GAAG,CAACE,IAAJ,CAASC,MAAT,IAAmBH,GAAG,CAACE,IAAJ,CAASE,UAA5B,IAA0CJ,GAAG,CAACE,IAAJ,CAASG,KAAvD,EAA8D;AAC5D,UAAMC,YAAY,GAAGN,GAAG,CAACE,IAAJ,CAASC,MAA9B;AACA,UAAME,KAAK,GAAGL,GAAG,CAACE,IAAJ,CAASG,KAAvB;AACA,UAAMD,UAAU,GAAGJ,GAAG,CAACE,IAAJ,CAASE,UAA5B;AAEA,UAAMG,gBAAgB,GAAG,WAAzB;AACA,UAAMC,WAAW,GAAG,SAApB;AACA,UAAMC,YAAY,GAAG,eAArB;;AAEA,UAAK,CAACJ,KAAK,CAACK,KAAN,CAAYF,WAAZ,CAAN,EAAiC;AAC/BP,QAAAA,GAAG,CAACU,IAAJ,CAAS;AACP,mBAAQ;AADD,SAAT;AAGD,OAJD,MAIO,IAAI,CAACP,UAAU,CAACM,KAAX,CAAiBH,gBAAjB,CAAL,EAAyC;AAC9CN,QAAAA,GAAG,CAACU,IAAJ,CAAS;AACP,mBAAQ;AADD,SAAT;AAGD,OAJM,MAIA,IAAI,CAACR,MAAM,CAACO,KAAP,CAAaD,YAAb,CAAL,EAAiC;AACtCR,QAAAA,GAAG,CAACU,IAAJ,CAAS;AACP,mBAAS;AADF,SAAT;AAGD,OAJM,MAIA,IAAIR,MAAM,CAACS,MAAP,IAAiB,EAArB,EAAwB;AAC7BX,QAAAA,GAAG,CAACU,IAAJ,CAAS;AACP,mBAAQ;AADD,SAAT;AAGD,OAzB2D,CA2B5D;;AAED,KA7BD,MA6BO;AACLV,MAAAA,GAAG,CAACU,IAAJ,CAAS;AACP,iBAAQ;AADD,OAAT;AAGD;AAEF,GArCH;AAuCAd,EAAAA,GAAG,CAACC,KAAJ,CAAU,YAAV,EACGC,IADH,CACQ,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClB,QAAI,CAACD,GAAG,CAACE,IAAJ,CAASC,MAAd,EAAsB;AACpBF,MAAAA,GAAG,CAACU,IAAJ,CAAS;AACP,iBAAQ;AADD,OAAT;AAGD,KAJD,MAIO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAMC,WAAW,GAAGf,GAAG,CAACE,IAAJ,CAASC,MAA7B;AACA,UAAMa,KAAK,GAAG,oBAAd;;AACA,UAAID,WAAW,CAACL,KAAZ,CAAkBM,KAAlB,CAAJ,EAA6B;AAC3B,YAAMC,WAAW,GAAGvB,YAAY,CAACwB,QAAb,CAAsBH,WAAtB,CAApB;;AACA,YAAI,CAACE,WAAL,EAAkB;AAChBhB,UAAAA,GAAG,CAACU,IAAJ,CAAS;AACP,qBAAS;AADF,WAAT;AAGD,SAJD,MAIO;AACH;AACA,cAAIQ,WAAW,GAAGzB,YAAY,CAAC0B,WAAb,CAAyBL,WAAzB,CAAlB;AACA,cAAMM,cAAc,GAAG3B,YAAY,CAAC4B,KAAb,CAAmBH,WAAnB,CAAvB;AACAlB,UAAAA,GAAG,CAACU,IAAJ,CAAS;AACP,wBAAYU;AADL,WAAT;AAGH;AACF,OAdD,MAcO;AACLpB,QAAAA,GAAG,CAACU,IAAJ,CAAS;AACP,mBAAS;AADF,SAAT;AAGD;AACF;AAEF,GA/BH;AAgCD,CAzED",
      "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\",
      "sourcesContent": [
        "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\nconst sudokuObject = new SudokuSolver();\n\nmodule.exports =  function (app) {\n\n  app.route('/api/check')\n    .post((req, res) => {\n      if (req.body.puzzle && req.body.coordinate && req.body.value) {\n        const puzzleString = req.body.puzzle;\n        const value = req.body.value;\n        const coordinate = req.body.coordinate;\n\n        const coordinateRegExp = /^[A-I]\\d$/;\n        const valueRegExp = /^[1-9]$/;\n        const puzzleRegExp = /^[1-9\\.]{81}$/;\n\n        if ( !value.match(valueRegExp) ) {\n          res.json({\n            \"error\":\"Invalid value\"\n          });\n        } else if (!coordinate.match(coordinateRegExp)) {\n          res.json({\n            \"error\":\"Invalid coordinate\"\n          });\n        } else if (!puzzle.match(puzzleRegExp)) {\n          res.json({\n            \"error\": \"Invalid characters in puzzle\"\n          });\n        } else if (puzzle.length != 81){\n          res.json({\n            \"error\":\"Expected puzzle to be 81 characters long\"\n          });\n        }\n\n        // Continue with what is required in this endpoint.\n\n      } else {\n        res.json({\n          \"error\":\"Required field(s) missing\"\n        })\n      }\n\n    });\n    \n  app.route('/api/solve')\n    .post((req, res) => {\n      if (!req.body.puzzle) {\n        res.json({\n          \"error\":\"Required field missing\"\n        });\n      } else {\n        console.log('Solving...');\n        const solveString = req.body.puzzle;\n        const regEx = /^[123456789\\.]{81}/;\n        if (solveString.match(regEx)){\n          const inputLength = sudokuObject.validate(solveString);\n          if (!inputLength) {\n            res.json({\n              \"error\": \"Expected puzzle to be 81 characters long\"\n            });\n          } else {\n              // Replace . with 0\n              let sudokuBoard = sudokuObject.createBoard(solveString);\n              const sudokuSolution = sudokuObject.solve(sudokuBoard);\n              res.json({\n                \"solution\": sudokuSolution\n              });\n          }\n        } else {\n          res.json({\n            \"error\": \"Invalid characters in puzzle\"\n          });\n        }\n      }\n      \n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1748154771175
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\",\"filename\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\\\\controllers\\\\sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver",
      "filename": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\sudoku-solver.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar InnerBoxes = [[\"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\", \"C1\", \"C2\", \"C3\"], [\"A4\", \"A5\", \"A6\", \"B4\", \"B5\", \"B6\", \"C4\", \"C5\", \"C6\"], [\"A7\", \"A8\", \"A9\", \"B7\", \"B8\", \"B9\", \"C7\", \"C8\", \"C9\"], [\"D1\", \"D2\", \"D3\", \"E1\", \"E2\", \"E3\", \"F1\", \"F2\", \"F3\"], [\"D4\", \"D5\", \"D6\", \"E4\", \"E5\", \"E6\", \"F4\", \"F5\", \"F6\"], [\"D7\", \"D8\", \"D9\", \"E7\", \"E8\", \"E9\", \"F7\", \"F8\", \"F9\"], [\"G1\", \"G2\", \"G3\", \"H1\", \"H2\", \"H3\", \"I1\", \"I2\", \"I3\"], [\"G4\", \"G5\", \"G6\", \"H4\", \"H5\", \"H6\", \"I4\", \"I5\", \"I6\"], [\"G7\", \"G8\", \"G9\", \"H7\", \"H8\", \"H9\", \"I7\", \"I8\", \"I9\"]];\n\nvar SudokuSolver = /*#__PURE__*/function () {\n  function SudokuSolver() {\n    _classCallCheck(this, SudokuSolver);\n  }\n\n  _createClass(SudokuSolver, [{\n    key: \"isSafe\",\n\n    /*\n    * isSafe function used to check if placement in a certain box\n    * is safe or not.  \n    */\n    value: function isSafe(puzzleString, row, column, value) {\n      // console.log('isSafe');\n      // Check row\n      for (var x = 0; x < 9; x++) {\n        if (puzzleString[row][x] === value) return false;\n      } // Check column\n\n\n      for (var _x = 0; _x < 9; _x++) {\n        if (puzzleString[_x][column] === value) return false;\n      } // Check 3x3 subgrid\n\n\n      var startRow = row - row % 3;\n      var startCol = column - column % 3;\n\n      for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 3; j++) {\n          if (puzzleString[i + startRow][j + startCol] === value) return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * createBoard method takes a string and returns an array of the sudoku\n     * puzzle spread out.\n     * @param {*} puzzleString \n     * @returns board\n     */\n\n  }, {\n    key: \"createBoard\",\n    value: function createBoard(puzzleString) {\n      console.log('Creating board.');\n      var board = [];\n      var index = 0;\n\n      for (var outerIndex = 0; outerIndex < 9; outerIndex++) {\n        var insideBoard = [];\n\n        for (var pushIndex = 0; pushIndex < 9; pushIndex++) {\n          if (puzzleString[index] == '.') {\n            insideBoard.push(puzzleString[index]);\n          } else {\n            insideBoard.push(parseInt(puzzleString[index]));\n          }\n\n          index++;\n        }\n\n        board.push(insideBoard);\n      }\n\n      console.log('Success: board created.');\n      return board;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(puzzleString) {\n      var puzzleLength = puzzleString.length;\n\n      if (puzzleLength != 81) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkRowPlacement\",\n    value: function checkRowPlacement(puzzleString, row, column, value) {}\n  }, {\n    key: \"checkColPlacement\",\n    value: function checkColPlacement(puzzleString, row, column, value) {}\n  }, {\n    key: \"checkRegionPlacement\",\n    value: function checkRegionPlacement(puzzleString, row, column, value) {}\n    /**\n     * finalSolve method is used to solve for the missing spaces on the board.\n     * basically\n     * @param {*} board \n     * @returns {string} boardString\n     */\n\n  }, {\n    key: \"finalSolve\",\n    value: function finalSolve(board) {\n      var TOTAL = 45;\n      var boardRowTotals = [];\n\n      for (var row = 0; row < board.length; row++) {\n        var total = 0;\n\n        for (var col = 0; col < board[row].length; col++) {\n          if (board[row][col] !== '.') {\n            total += board[row][col];\n          }\n        }\n\n        boardRowTotals.push(total);\n      } // Edit the board and insert the missing values\n\n\n      for (var _row = 0; _row < board.length; _row++) {\n        var currTotal = boardRowTotals[_row];\n        var difference = TOTAL - currTotal;\n\n        for (var cols = 0; cols < board[_row].length; cols++) {\n          if (board[_row][cols] === '.') {\n            board[_row][cols] = difference;\n            continue;\n          }\n        }\n      }\n\n      return this.stringify(board);\n    }\n    /**\n     * Converts the board to a string\n     * @param {*} board \n     * @returns boardString\n     */\n\n  }, {\n    key: \"stringify\",\n    value: function stringify(board) {\n      var boardString = \"\";\n\n      for (var rows = 0; rows < board.length; rows++) {\n        for (var cols = 0; cols < board[rows].length; cols++) {\n          boardString += board[rows][cols].toString();\n        }\n      }\n\n      return boardString;\n    }\n  }, {\n    key: \"solve\",\n    value: function solve(board) {\n      for (var row = 0; row < board.length; row++) {\n        for (var col = 0; col < board[row].length; col++) {\n          if (board[row][col] === '.') {\n            for (var num = 1; num <= 9; num++) {\n              var safe = this.isSafe(board, row, col, num);\n\n              if (safe) {\n                board[row][col] = parseInt(num);\n                break;\n              }\n            }\n          }\n        }\n      } // Call the method that will put the final missing\n      // values in the board array.\n\n\n      board = this.finalSolve(board);\n      return board;\n    }\n  }]);\n\n  return SudokuSolver;\n}();\n\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sudoku-solver.js"
      ],
      "names": [
        "InnerBoxes",
        "SudokuSolver",
        "puzzleString",
        "row",
        "column",
        "value",
        "x",
        "startRow",
        "startCol",
        "i",
        "j",
        "console",
        "log",
        "board",
        "index",
        "outerIndex",
        "insideBoard",
        "pushIndex",
        "push",
        "parseInt",
        "puzzleLength",
        "length",
        "TOTAL",
        "boardRowTotals",
        "total",
        "col",
        "currTotal",
        "difference",
        "cols",
        "stringify",
        "boardString",
        "rows",
        "toString",
        "num",
        "safe",
        "isSafe",
        "finalSolve",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\",
      "sourcesContent": [
        "let InnerBoxes = [\n  [\"A1\", \"A2\", \"A3\", \"B1\",\"B2\", \"B3\", \"C1\", \"C2\", \"C3\"],\n  [\"A4\", \"A5\", \"A6\", \"B4\",\"B5\", \"B6\", \"C4\", \"C5\", \"C6\"],\n  [\"A7\", \"A8\", \"A9\", \"B7\",\"B8\", \"B9\", \"C7\", \"C8\", \"C9\"],\n  \n  [\"D1\", \"D2\", \"D3\", \"E1\",\"E2\", \"E3\", \"F1\", \"F2\", \"F3\"],\n  [\"D4\", \"D5\", \"D6\", \"E4\",\"E5\", \"E6\", \"F4\", \"F5\", \"F6\"],\n  [\"D7\", \"D8\", \"D9\", \"E7\",\"E8\", \"E9\", \"F7\", \"F8\", \"F9\"],\n\n  [\"G1\", \"G2\", \"G3\", \"H1\",\"H2\", \"H3\", \"I1\", \"I2\", \"I3\"],\n  [\"G4\", \"G5\", \"G6\", \"H4\",\"H5\", \"H6\", \"I4\", \"I5\", \"I6\"],\n  [\"G7\", \"G8\", \"G9\", \"H7\",\"H8\", \"H9\", \"I7\", \"I8\", \"I9\"],\n\n];\n\nclass SudokuSolver {\n\n  /*\n  * isSafe function used to check if placement in a certain box\n  * is safe or not.  \n  */\n  isSafe(puzzleString, row, column, value){\n  // console.log('isSafe');\n    // Check row\n  for (let x = 0; x < 9; x++) {\n    if (puzzleString[row][x] === value) return false;\n  }\n\n  // Check column\n  for (let x = 0; x < 9; x++) {\n    if (puzzleString[x][column] === value) return false;\n  }\n\n  // Check 3x3 subgrid\n  const startRow = row - (row % 3);\n  const startCol = column - (column % 3);\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (puzzleString[i + startRow][j + startCol] === value) return false;\n    }\n  }\n\n  return true;\n  }\n\n  /**\n   * createBoard method takes a string and returns an array of the sudoku\n   * puzzle spread out.\n   * @param {*} puzzleString \n   * @returns board\n   */\n\n  createBoard(puzzleString){\n    console.log('Creating board.');\n    let board = [];\n    let index = 0;\n\n    for ( let outerIndex = 0; outerIndex < 9; outerIndex++ ){\n      let insideBoard = [];\n      for( let pushIndex = 0; pushIndex < 9; pushIndex++)\n      {\n        if (puzzleString[index] == '.') {\n          insideBoard.push(puzzleString[index]);\n        } else {\n          insideBoard.push(parseInt(puzzleString[index]));\n        }\n        index++;\n      }\n\n      board.push(insideBoard);\n    }\n    console.log('Success: board created.');\n    return board;\n  }\n\n  validate(puzzleString) {\n    const puzzleLength = puzzleString.length;\n    if (puzzleLength != 81){\n      return false;\n    }\n    return true;\n  }\n\n  checkRowPlacement(puzzleString, row, column, value) {\n\n  }\n\n  checkColPlacement(puzzleString, row, column, value) {\n\n  }\n\n  checkRegionPlacement(puzzleString, row, column, value) {\n\n  }\n  /**\n   * finalSolve method is used to solve for the missing spaces on the board.\n   * basically\n   * @param {*} board \n   * @returns {string} boardString\n   */\n  finalSolve(board){\n    const TOTAL = 45;\n    const boardRowTotals = [];\n\n    for (let row = 0; row < board.length; row++){\n      let total = 0;\n      for (let col = 0; col < board[row].length; col++)\n      {\n        if (board[row][col] !== '.'){\n          total += board[row][col];\n        }\n      }\n      boardRowTotals.push(total);\n    }\n    \n    // Edit the board and insert the missing values\n    for (let row = 0; row < board.length; row++){\n      const currTotal = boardRowTotals[row];\n      const difference = TOTAL - currTotal;\n\n      for (let cols = 0; cols< board[row].length; cols++){\n        if (board[row][cols] === '.') {\n          board[row][cols] = difference;\n          continue;\n        }\n      }\n    }\n    return this.stringify(board);\n  }\n  /**\n   * Converts the board to a string\n   * @param {*} board \n   * @returns boardString\n   */\n  stringify(board){\n    let boardString = \"\"\n\n    for (let rows= 0; rows < board.length; rows++){\n      for(let cols = 0; cols< board[rows].length; cols++){\n        boardString += board[rows][cols].toString();\n      }\n    }\n    return boardString;\n  }\n\n  solve(board) {\n   for (let row = 0; row < board.length; row++ ) {\n    for (let col = 0; col < board[row].length; col++)\n    {\n      if (board[row][col] === '.'){\n        for (let num = 1; num <= 9; num++){\n          const safe = this.isSafe(board, row, col, num);\n          if (safe){\n            board[row][col] = parseInt(num);\n            break;\n          }\n        }\n      }\n    }\n   }\n   \n   // Call the method that will put the final missing\n   // values in the board array.\n   board = this.finalSolve(board);\n   return board;\n  }\n}\n\nmodule.exports = SudokuSolver;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1748154593278
  }
}