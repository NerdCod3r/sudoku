{
  "{\"sourceRoot\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\",\"filename\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\\\\routes\\\\api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver",
      "filename": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\api.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar SudokuSolver = require('../controllers/sudoku-solver.js');\n\nvar sudokuObject = new SudokuSolver();\n\nmodule.exports = function (app) {\n  app.route('/api/check').post(function (req, res) {\n    if (req.body.puzzle && req.body.coordinate && req.body.value) {\n      var puzzleString = req.body.puzzle;\n      console.log(puzzleString);\n      var value = req.body.value; //  console.log(value)\n\n      var coordinate = req.body.coordinate; //  console.log(coordinate);\n\n      var coordinateRegExp = /^[A-I][123456789]$/;\n      var valueRegExp = /^[123456789]$/;\n      var puzzleRegExp = /^[123456789.]*$/;\n\n      if (!value.match(valueRegExp)) {\n        res.json({\n          \"error\": \"Invalid value\"\n        });\n      } else if (!coordinate.match(coordinateRegExp)) {\n        res.json({\n          \"error\": \"Invalid coordinate\"\n        });\n      } else if (!puzzleString.match(puzzleRegExp)) {\n        res.json({\n          \"error\": \"Invalid characters in puzzle\"\n        });\n      } else if (!sudokuObject.validate(puzzleString)) {\n        res.json({\n          \"error\": \"Expected puzzle to be 81 characters long\"\n        });\n      } else if (puzzleString.length === 81 && puzzleString.match(puzzleRegExp) && coordinate.match(coordinateRegExp) && value.match(valueRegExp)) {\n        // Continue with what is required in this endpoint.\n        var ROW = coordinate[0];\n        var rowIndex = -1;\n\n        switch (ROW) {\n          case 'A':\n            rowIndex = 0;\n            break;\n\n          case 'B':\n            rowIndex = 1;\n            break;\n\n          case 'C':\n            rowIndex = 2;\n            break;\n\n          case 'D':\n            rowIndex = 3;\n            break;\n\n          case 'E':\n            rowIndex = 4;\n            break;\n\n          case 'F':\n            rowIndex = 5;\n            break;\n\n          case 'G':\n            rowIndex = 6;\n            break;\n\n          case 'H':\n            rowIndex = 7;\n            break;\n\n          case 'I':\n            rowIndex = 8;\n            break;\n        }\n\n        var colIndex = parseInt(coordinate[1]) - 1; // Check if the value is already in the board\n\n        var placedBoard = sudokuObject.createBoard(puzzleString);\n\n        if (placedBoard[rowIndex][colIndex] === parseInt(value)) {\n          res.json({\n            \"valid\": true\n          });\n        } else {\n          var rowClash = sudokuObject.checkRowPlacement(puzzleString, rowIndex, colIndex, value); //console.log(\"row:\", rowClash);\n\n          var colClash = sudokuObject.checkColPlacement(puzzleString, rowIndex, colIndex, value); //console.log(\"col:\", colClash);\n\n          var subGridsClash = sudokuObject.checkRegionPlacement(puzzleString, rowIndex, colIndex, value); //console.log(\"box:\", subGridsClash);\n\n          var clashes = [];\n\n          if (rowClash) {\n            clashes.push(\"row\");\n          }\n\n          if (colClash) {\n            clashes.push(\"column\");\n          }\n\n          if (subGridsClash) {\n            clashes.push(\"region\");\n          }\n\n          if (clashes.length === 0) {\n            res.json({\n              \"valid\": true\n            });\n          } else {\n            res.json({\n              \"valid\": false,\n              \"conflict\": clashes\n            });\n          }\n        } // end of checks\n\n      }\n    } else {\n      res.json({\n        \"error\": \"Required field(s) missing\"\n      });\n    }\n  });\n  app.route('/api/solve').post(function (req, res) {\n    if (!req.body.puzzle) {\n      res.json({\n        \"error\": \"Required field missing\"\n      });\n    } else {\n      var solveString = req.body.puzzle;\n      var regEx = /^[123456789.]*$/;\n\n      if (solveString.match(regEx)) {\n        var inputLength = sudokuObject.validate(solveString);\n\n        if (!inputLength) {\n          res.json({\n            \"error\": \"Expected puzzle to be 81 characters long\"\n          });\n        } else {\n          // Replace . with 0\n          var sudokuBoard = sudokuObject.createBoard(solveString);\n          var sudokuSolution = sudokuObject.solve(sudokuBoard);\n          console.log(\"Solved\");\n          res.json({\n            \"solution\": sudokuSolution\n          });\n        }\n      } else {\n        res.json({\n          \"error\": \"Invalid characters in puzzle\"\n        });\n      }\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "SudokuSolver",
        "require",
        "sudokuObject",
        "module",
        "exports",
        "app",
        "route",
        "post",
        "req",
        "res",
        "body",
        "puzzle",
        "coordinate",
        "value",
        "puzzleString",
        "console",
        "log",
        "coordinateRegExp",
        "valueRegExp",
        "puzzleRegExp",
        "match",
        "json",
        "validate",
        "length",
        "ROW",
        "rowIndex",
        "colIndex",
        "parseInt",
        "placedBoard",
        "createBoard",
        "rowClash",
        "checkRowPlacement",
        "colClash",
        "checkColPlacement",
        "subGridsClash",
        "checkRegionPlacement",
        "clashes",
        "push",
        "solveString",
        "regEx",
        "inputLength",
        "sudokuBoard",
        "sudokuSolution",
        "solve"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\routes\\",
      "sourcesContent": [
        "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\nconst sudokuObject = new SudokuSolver();\n\nmodule.exports =  function (app) {\n\n  app.route('/api/check')\n    .post((req, res) => {\n      if (req.body.puzzle && req.body.coordinate && req.body.value) {\n        const puzzleString = req.body.puzzle;\n        console.log(puzzleString);\n        const value = req.body.value;\n        //  console.log(value)\n        const coordinate = req.body.coordinate;\n        //  console.log(coordinate);\n\n        const coordinateRegExp = /^[A-I][123456789]$/;\n        const valueRegExp = /^[123456789]$/;\n        const puzzleRegExp = /^[123456789.]*$/;\n\n        if ( !value.match(valueRegExp) ) {\n          res.json({\n            \"error\":\"Invalid value\"\n          });\n        } else if (!coordinate.match(coordinateRegExp)) {\n          res.json({\n            \"error\":\"Invalid coordinate\"\n          });\n        } else if (!puzzleString.match(puzzleRegExp)) {\n          res.json({\n            \"error\": \"Invalid characters in puzzle\"\n          });\n        } else if (!sudokuObject.validate(puzzleString)){\n          res.json({\n            \"error\":\"Expected puzzle to be 81 characters long\"\n          });\n        } else if ( (puzzleString.length === 81) && (puzzleString.match(puzzleRegExp)) && (coordinate.match(coordinateRegExp)) && (value.match(valueRegExp))){\n          // Continue with what is required in this endpoint.\n        const ROW = coordinate[0];\n        let rowIndex = -1;\n\n        switch(ROW){\n          case 'A':\n            rowIndex = 0;\n            break;\n          case 'B':\n            rowIndex = 1;\n            break;\n          case 'C':\n            rowIndex = 2;\n            break;\n          case 'D':\n            rowIndex = 3;\n            break;\n          case 'E':\n            rowIndex = 4;\n            break;\n          case 'F':\n              rowIndex = 5;\n              break;\n          case 'G':\n              rowIndex = 6;\n              break;\n          case 'H':\n              rowIndex = 7;\n              break;\n          case 'I':\n              rowIndex = 8;\n              break;\n        }\n        let colIndex = parseInt(coordinate[1]) - 1;\n\n        // Check if the value is already in the board\n        const placedBoard = sudokuObject.createBoard(puzzleString);\n        if (placedBoard[rowIndex][colIndex] === parseInt(value)){\n          res.json({\n            \"valid\": true\n          });\n        } else {\n          const rowClash = sudokuObject.checkRowPlacement(puzzleString, rowIndex, colIndex, value);\n        //console.log(\"row:\", rowClash);\n        const colClash = sudokuObject.checkColPlacement(puzzleString, rowIndex, colIndex, value);\n        //console.log(\"col:\", colClash);\n        const subGridsClash = sudokuObject.checkRegionPlacement(puzzleString, rowIndex, colIndex, value);\n        //console.log(\"box:\", subGridsClash);\n        let clashes = []\n\n        if (rowClash){\n          clashes.push(\"row\");\n        } \n        if (colClash){\n          clashes.push(\"column\");\n        }\n        if (subGridsClash){\n          clashes.push(\"region\");\n        }\n\n        if (clashes.length === 0){\n          res.json({\n            \"valid\": true\n          });\n        } else {\n          res.json({\n            \"valid\": false,\n            \"conflict\": clashes\n          });\n        }\n      }\n      // end of checks\n      }\n\n      } else {\n        res.json({\n          \"error\":\"Required field(s) missing\"\n        })\n      }\n\n    });\n    \n  app.route('/api/solve')\n    .post((req, res) => {\n      if (!req.body.puzzle) {\n        res.json({\n          \"error\":\"Required field missing\"\n        });\n      } else {\n        const solveString = req.body.puzzle;\n        const regEx = /^[123456789.]*$/;\n        if (solveString.match(regEx)){\n          const inputLength = sudokuObject.validate(solveString);\n          if (!inputLength) {\n            res.json({\n              \"error\": \"Expected puzzle to be 81 characters long\"\n            });\n          } else {\n              // Replace . with 0\n              let sudokuBoard = sudokuObject.createBoard(solveString);\n              const sudokuSolution = sudokuObject.solve(sudokuBoard);\n              console.log(\"Solved\");\n              res.json({\n                \"solution\": sudokuSolution\n              });\n          }\n        } else {\n          res.json({\n            \"error\": \"Invalid characters in puzzle\"\n          });\n        }\n      }\n      \n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1748274580405
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\",\"filename\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\\\\controllers\\\\sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\27682\\\\Desktop\\\\Local_Projects\\\\Quality_Assurance_and_Testing_with_Chai\\\\Projects\\\\boilerplate-project-sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver",
      "filename": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\sudoku-solver.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SudokuSolver = /*#__PURE__*/function () {\n  function SudokuSolver() {\n    _classCallCheck(this, SudokuSolver);\n  }\n\n  _createClass(SudokuSolver, [{\n    key: \"isSafe\",\n\n    /*\n    * isSafe function used to check if placement in a certain box\n    * is safe or not.  \n    */\n    value: function isSafe(puzzleString, row, column, value) {\n      // console.log('isSafe');\n      // Check row\n      for (var x = 0; x < 9; x++) {\n        if (puzzleString[row][x] === value) return false;\n      } // Check column\n\n\n      for (var _x = 0; _x < 9; _x++) {\n        if (puzzleString[_x][column] === value) return false;\n      } // Check 3x3 subgrid\n\n\n      var startRow = row - row % 3;\n      var startCol = column - column % 3;\n\n      for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 3; j++) {\n          if (puzzleString[i + startRow][j + startCol] === value) return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * createBoard method takes a string and returns an array of the sudoku\n     * puzzle spread out.\n     * @param {*} puzzleString \n     * @returns board\n     */\n\n  }, {\n    key: \"createBoard\",\n    value: function createBoard(puzzleString) {\n      var board = [];\n      var index = 0;\n\n      for (var outerIndex = 0; outerIndex < 9; outerIndex++) {\n        var insideBoard = [];\n\n        for (var pushIndex = 0; pushIndex < 9; pushIndex++) {\n          if (puzzleString[index] == '.') {\n            insideBoard.push(puzzleString[index]);\n          } else {\n            insideBoard.push(parseInt(puzzleString[index]));\n          }\n\n          index++;\n        }\n\n        board.push(insideBoard);\n      }\n\n      return board;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(puzzleString) {\n      var puzzleLength = puzzleString.length;\n\n      if (puzzleLength !== 81) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkRowPlacement\",\n    value: function checkRowPlacement(puzzleString, row, column, value) {\n      var Board = this.createBoard(puzzleString);\n      var clash = false; //  Loop through the columns to find clashes\n\n      for (var col = 0; col < 9; col++) {\n        if (col !== column) {\n          if (Board[row][col] === parseInt(value)) {\n            clash = true;\n            break;\n          }\n        }\n      }\n\n      return clash;\n    }\n  }, {\n    key: \"checkColPlacement\",\n    value: function checkColPlacement(puzzleString, row, column, value) {\n      var Board = this.createBoard(puzzleString);\n      var clash = false; //  Loop through the rows to find clashes\n\n      for (var rows = 0; rows < 9; rows++) {\n        if (rows !== row) {\n          if (Board[rows][column] === parseInt(value)) {\n            clash = true;\n            break;\n          }\n        }\n      }\n\n      return clash;\n    }\n  }, {\n    key: \"checkRegionPlacement\",\n    value: function checkRegionPlacement(puzzleString, row, column, value) {\n      var Board = this.createBoard(puzzleString);\n      var clash = false;\n      var subgrids = Array.from({\n        length: 9\n      }, function () {\n        return [];\n      });\n\n      for (var _row = 0; _row < 9; _row++) {\n        for (var col = 0; col < 9; col++) {\n          var subgridIndex = Math.floor(_row / 3) * 3 + Math.floor(col / 3);\n          subgrids[subgridIndex].push(Board[_row][col]);\n        }\n      }\n\n      var boxNumber = -1; // Find the box/ index to check in.\n\n      if (row < 3 && column < 3) {\n        boxNumber = 0;\n      } else if (row < 3 && column >= 3 && column < 6) {\n        boxNumber = 1;\n      } else if (row < 3 && column >= 6 && column < 9) {\n        boxNumber = 2;\n      } else if (row >= 3 && row < 6 && column < 3) {\n        boxNumber = 3;\n      } else if (row >= 3 && row < 6 && column >= 3 && column < 6) {\n        boxNumber = 4;\n      } else if (row >= 3 && row < 6 && column >= 6 && column < 9) {\n        boxNumber = 5;\n      } else if (row >= 6 && row < 9 && column < 3) {\n        boxNumber = 6;\n      } else if (row >= 6 && row < 9 && column >= 3 && column < 6) {\n        boxNumber = 7;\n      } else if (row >= 6 && row < 9 && column >= 6 && column < 9) {\n        boxNumber = 8;\n      } // Do the findings\n\n\n      for (var i = 0; i < subgrids[boxNumber].length; i++) {\n        if (subgrids[boxNumber][i] === parseInt(value)) {\n          clash = true;\n        }\n      }\n\n      return clash;\n    }\n    /**\n     * finalSolve method is used to solve for the missing spaces on the board.\n     * basically\n     * @param {*} board \n     * @returns {string} boardString\n     */\n\n  }, {\n    key: \"finalSolve\",\n    value: function finalSolve(board) {\n      var TOTAL = 45;\n      var boardRowTotals = [];\n\n      for (var row = 0; row < board.length; row++) {\n        var total = 0;\n\n        for (var col = 0; col < board[row].length; col++) {\n          if (board[row][col] !== '.') {\n            total += board[row][col];\n          }\n        }\n\n        boardRowTotals.push(total);\n      } // Edit the board and insert the missing values\n\n\n      for (var _row2 = 0; _row2 < board.length; _row2++) {\n        var currTotal = boardRowTotals[_row2];\n        var difference = TOTAL - currTotal;\n\n        for (var cols = 0; cols < board[_row2].length; cols++) {\n          if (board[_row2][cols] === '.') {\n            board[_row2][cols] = difference;\n            continue;\n          }\n        }\n      }\n\n      return board;\n    }\n    /**\n     * Converts the board to a string\n     * @param {*} board \n     * @returns boardString\n     */\n\n  }, {\n    key: \"stringify\",\n    value: function stringify(board) {\n      var boardString = \"\";\n\n      for (var rows = 0; rows < board.length; rows++) {\n        for (var cols = 0; cols < board[rows].length; cols++) {\n          boardString += board[rows][cols].toString();\n        }\n      }\n\n      return boardString;\n    }\n  }, {\n    key: \"solve\",\n    value: function solve(board) {\n      var _solve = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      for (var row = 0; row < board.length; row++) {\n        for (var col = 0; col < board[row].length; col++) {\n          if (board[row][col] === '.') {\n            for (var num = 1; num <= 9; num++) {\n              var safe = this.isSafe(board, row, col, num);\n\n              if (safe) {\n                board[row][col] = parseInt(num);\n                break;\n              }\n            }\n          }\n        }\n      } // Call the method that will put the final missing\n      // values in the board array.\n\n\n      board = this.finalSolve(board);\n\n      if (!_solve) {\n        return board;\n      }\n\n      return this.stringify(board);\n    }\n  }]);\n\n  return SudokuSolver;\n}();\n\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sudoku-solver.js"
      ],
      "names": [
        "SudokuSolver",
        "puzzleString",
        "row",
        "column",
        "value",
        "x",
        "startRow",
        "startCol",
        "i",
        "j",
        "board",
        "index",
        "outerIndex",
        "insideBoard",
        "pushIndex",
        "push",
        "parseInt",
        "puzzleLength",
        "length",
        "Board",
        "createBoard",
        "clash",
        "col",
        "rows",
        "subgrids",
        "Array",
        "from",
        "subgridIndex",
        "Math",
        "floor",
        "boxNumber",
        "TOTAL",
        "boardRowTotals",
        "total",
        "currTotal",
        "difference",
        "cols",
        "boardString",
        "toString",
        "solve",
        "num",
        "safe",
        "isSafe",
        "finalSolve",
        "stringify",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\27682\\Desktop\\Local_Projects\\Quality_Assurance_and_Testing_with_Chai\\Projects\\boilerplate-project-sudoku-solver\\controllers\\",
      "sourcesContent": [
        "class SudokuSolver {\n\n  /*\n  * isSafe function used to check if placement in a certain box\n  * is safe or not.  \n  */\n  isSafe(puzzleString, row, column, value){\n  // console.log('isSafe');\n    // Check row\n  for (let x = 0; x < 9; x++) {\n    if (puzzleString[row][x] === value) return false;\n  }\n\n  // Check column\n  for (let x = 0; x < 9; x++) {\n    if (puzzleString[x][column] === value) return false;\n  }\n\n  // Check 3x3 subgrid\n  const startRow = row - (row % 3);\n  const startCol = column - (column % 3);\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (puzzleString[i + startRow][j + startCol] === value) return false;\n    }\n  }\n\n  return true;\n  }\n\n  /**\n   * createBoard method takes a string and returns an array of the sudoku\n   * puzzle spread out.\n   * @param {*} puzzleString \n   * @returns board\n   */\n\n  createBoard(puzzleString){\n    let board = [];\n    let index = 0;\n\n    for ( let outerIndex = 0; outerIndex < 9; outerIndex++ ){\n      let insideBoard = [];\n      for( let pushIndex = 0; pushIndex < 9; pushIndex++)\n      {\n        if (puzzleString[index] == '.') {\n          insideBoard.push(puzzleString[index]);\n        } else {\n          insideBoard.push(parseInt(puzzleString[index]));\n        }\n        index++;\n      }\n\n      board.push(insideBoard);\n    }\n    return board;\n  }\n\n  validate(puzzleString) {\n    const puzzleLength = puzzleString.length;\n    if (puzzleLength !== 81){\n      return false;\n    }\n    return true;\n  }\n\n  checkRowPlacement(puzzleString, row, column, value) {\n    let Board = this.createBoard(puzzleString);\n    let clash = false;\n    //  Loop through the columns to find clashes\n    for (let col =0; col < 9; col++){\n      if (col !== column){\n        if(Board[row][col] === parseInt(value)){\n          clash = true;\n          break;\n        }\n      }\n    }\n    return clash;\n\n  }\n\n  checkColPlacement(puzzleString, row, column, value) {\n    let Board = this.createBoard(puzzleString);\n    let clash = false;\n    //  Loop through the rows to find clashes\n    for (let rows =0; rows < 9; rows++){\n      if (rows !== row){\n        if(Board[rows][column] === parseInt(value)){\n          clash = true;\n          break;\n        }\n      }\n    }\n    return clash;\n  }\n\n  checkRegionPlacement(puzzleString, row, column, value) {\n    let Board = this.createBoard(puzzleString);\n    let clash = false;\n    let subgrids = Array.from({ length: 9 }, () => []);\n\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      const subgridIndex = Math.floor(row / 3) * 3 + Math.floor(col / 3);\n      subgrids[subgridIndex].push(Board[row][col]);\n    }\n  }\n  let boxNumber = -1;\n\n  // Find the box/ index to check in.\n  if (row < 3 && column < 3){\n    boxNumber = 0;\n  } else if ( row < 3 && (column >= 3 && column < 6)){\n    boxNumber = 1;\n  } else if (row < 3 && (column >=6 && column < 9)){\n    boxNumber = 2;\n  } else if ((row >=3 && row < 6) && column < 3){\n    boxNumber = 3;\n  } else if ((row >=3 && row < 6) && (column >= 3 && column < 6)){\n    boxNumber = 4;\n  } else if ((row >= 3 && row < 6) && (column >= 6 && column < 9)){\n    boxNumber = 5;\n  } else if ((row >=6 && row < 9) && column < 3) {\n    boxNumber = 6;\n  } else if ((row >= 6 && row < 9) && (column >= 3 && column < 6)){\n    boxNumber = 7;\n  } else if ((row >= 6 && row < 9) && (column >=6 && column < 9)){\n    boxNumber = 8;\n  }\n\n  // Do the findings\n  for (let i = 0; i < subgrids[boxNumber].length; i++){\n    if(subgrids[boxNumber][i] === parseInt(value)){\n      clash = true;\n    }\n  }\n  return clash;\n\n  }\n  /**\n   * finalSolve method is used to solve for the missing spaces on the board.\n   * basically\n   * @param {*} board \n   * @returns {string} boardString\n   */\n  finalSolve(board){\n    const TOTAL = 45;\n    const boardRowTotals = [];\n\n    for (let row = 0; row < board.length; row++){\n      let total = 0;\n      for (let col = 0; col < board[row].length; col++)\n      {\n        if (board[row][col] !== '.'){\n          total += board[row][col];\n        }\n      }\n      boardRowTotals.push(total);\n    }\n    \n    // Edit the board and insert the missing values\n    for (let row = 0; row < board.length; row++){\n      const currTotal = boardRowTotals[row];\n      const difference = TOTAL - currTotal;\n\n      for (let cols = 0; cols< board[row].length; cols++){\n        if (board[row][cols] === '.') {\n          board[row][cols] = difference;\n          continue;\n        }\n      }\n    }\n    return board;\n  }\n  /**\n   * Converts the board to a string\n   * @param {*} board \n   * @returns boardString\n   */\n  stringify(board){\n    let boardString = \"\"\n\n    for (let rows= 0; rows < board.length; rows++){\n      for(let cols = 0; cols< board[rows].length; cols++){\n        boardString += board[rows][cols].toString();\n      }\n    }\n    return boardString;\n  }\n\n  solve(board, solve=true) {\n   for (let row = 0; row < board.length; row++ ) {\n    for (let col = 0; col < board[row].length; col++)\n    {\n      if (board[row][col] === '.'){\n        for (let num = 1; num <= 9; num++){\n          const safe = this.isSafe(board, row, col, num);\n          if (safe){\n            board[row][col] = parseInt(num);\n            break;\n          }\n        }\n      }\n    }\n   }\n   \n   // Call the method that will put the final missing\n   // values in the board array.\n   board = this.finalSolve(board);\n   if(!solve){\n    return board;\n   }\n   return this.stringify(board);\n  }\n}\n\nmodule.exports = SudokuSolver;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1748274446133
  }
}